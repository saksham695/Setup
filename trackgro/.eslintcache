[{"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/store/reducer.js":"1","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/store/action.js":"2","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/App.js":"3","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/SharedText/Text.js":"4","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Header/Header.js":"5","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Card/CardContainer.js":"6","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Footer/Footer.js":"7","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/GreenEffect.js":"8","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Icon/Icon.js":"9","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Provider/Provider.js":"10","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/config.ts":"11","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/mocks.js":"12","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Process/Process.js":"13","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Process/ProcessCard.js":"14","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/SVG/RightToLeft.js":"15","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/SVG/LeftToRightPath.js":"16","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/RedEffect.js":"17","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/ProductDetail/ProductDetail.js":"18","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Tooltip/ToolTip.js":"19","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/BlueEffect.js":"20","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/schema.js":"21","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/BlackEffect.js":"22","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/queries.ts":"23"},{"size":244,"mtime":1632251182087,"results":"24","hashOfConfig":"25"},{"size":27,"mtime":1632251182087,"results":"26","hashOfConfig":"27"},{"size":791,"mtime":1634798756965,"results":"28","hashOfConfig":"27"},{"size":329,"mtime":1632378734579,"results":"29","hashOfConfig":"27"},{"size":4052,"mtime":1634799370302,"results":"30","hashOfConfig":"27"},{"size":201,"mtime":1632258216281,"results":"31","hashOfConfig":"25"},{"size":2863,"mtime":1632384161047,"results":"32","hashOfConfig":"27"},{"size":314,"mtime":1632419615511,"results":"33","hashOfConfig":"27"},{"size":285,"mtime":1632419358673,"results":"34","hashOfConfig":"27"},{"size":631,"mtime":1634792566645,"results":"35","hashOfConfig":"27"},{"size":574,"mtime":1634790279280,"results":"36","hashOfConfig":"27"},{"size":1864,"mtime":1632762011241,"results":"37","hashOfConfig":"27"},{"size":750,"mtime":1634798404932,"results":"38","hashOfConfig":"27"},{"size":6793,"mtime":1632559713259,"results":"39","hashOfConfig":"27"},{"size":4853,"mtime":1632553704291,"results":"40","hashOfConfig":"27"},{"size":4785,"mtime":1632553664146,"results":"41","hashOfConfig":"27"},{"size":283,"mtime":1632474612874,"results":"42","hashOfConfig":"27"},{"size":2834,"mtime":1634798768884,"results":"43","hashOfConfig":"27"},{"size":250,"mtime":1632557037374,"results":"44","hashOfConfig":"27"},{"size":314,"mtime":1632504982242,"results":"45","hashOfConfig":"27"},{"size":545,"mtime":1632333223068,"results":"46","hashOfConfig":"27"},{"size":316,"mtime":1632505027013,"results":"47","hashOfConfig":"27"},{"size":1180,"mtime":1634794054317,"results":"48","hashOfConfig":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"1e54h7d",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1gt3b0e",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/store/reducer.js",["102","103"],"import { ACTIONS } from \"./action\";\n\nexport const initialState = {\n  name: \"\",\n};\n\nexport const reducer = (state, action) => {\n  const { payload, type } = action;\n\n  switch (type) {\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n",["104","105"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/store/action.js",[],["106","107"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/App.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/SharedText/Text.js",[],["108","109"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Header/Header.js",["110","111"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Card/CardContainer.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Footer/Footer.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/GreenEffect.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Icon/Icon.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Provider/Provider.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/config.ts",["112"],"import { ApolloClient, ApolloLink, InMemoryCache, createHttpLink } from '@apollo/client'\nimport { schemaLink } from './schema'\nimport gql from \"graphql-tag\";\nexport const cache = new InMemoryCache()\n\nconst link = createHttpLink({\n    /** Your graphql endpoint */\n    uri: 'http://localhost:8080/query',\n})\n\nexport const client = new ApolloClient({\n    connectToDevTools: true,\n    link: ApolloLink.from([link, (schemaLink as unknown) as ApolloLink]),\n    cache,\n    resolvers: {},\n    defaultOptions: {\n        query: {\n            errorPolicy: 'all',\n        },\n    },\n})\n\n",["113","114"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/mocks.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Process/Process.js",["115","116","117"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Process/ProcessCard.js",["118","119","120"],"import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport BlackEffect from \"../BackgroundEffect/BlackEffect\";\nimport BlueEffect from \"../BackgroundEffect/BlueEffect\";\nimport GreenEffect from \"../BackgroundEffect/GreenEffect\";\nimport RedEffect from \"../BackgroundEffect/RedEffect\";\nimport Text from \"../SharedText/Text\";\nimport LeftToRightPath from \"../SVG/LeftToRightPath\";\nimport RightToLeft from \"../SVG/RightToLeft\";\nimport heartFilled from \"../../assets/icons/heart_filled.png\";\nimport trusted from \"../../assets/icons/trusted_organization.png\";\nimport sales from \"../../assets/icons/sales.png\";\nimport health_market from \"../../assets/icons/health_market.png\";\nimport passenger from \"../../assets/icons/passenger-care.png\";\nimport checked from \"../../assets/icons/checked.png\";\nimport logistics from \"../../assets/icons/logistics.png\";\nimport carbon_manage from \"../../assets/icons/carbon_manage.png\";\nimport raphael_dry from \"../../assets/icons/raphael_dry.png\";\nimport carbon_upgrade from \"../../assets/icons/carbon_upgrade.png\";\n\nimport \"./Process.css\";\nimport { GET_DETAILED_CONTENT, GET_PROCESS } from \"../../apollo/queries\";\n\nexport default function ProcessCard(props) {\n  const { process = {}, index, totalProcessesCount } = props;\n  const { heading, content, imageUrl, processId } = process;\n  const isOrignalOrientation = index % 2 === 0;\n  const isLast = totalProcessesCount - 1 === index;\n\n  const getBackgroundEffectComponent = (index, totalProcessesCount) => {\n    if (totalProcessesCount - 2 === index) {\n      return [<BlueEffect />, <RedEffect />, trusted, heartFilled];\n    }\n    if (index % 4 === 0) {\n      return [<RedEffect />, <GreenEffect />, passenger, carbon_upgrade];\n    }\n    if (index % 4 === 1) {\n      return [<GreenEffect />, <RedEffect />, sales, health_market];\n    }\n    if (index % 4 === 2) {\n      return [<GreenEffect />, <BlueEffect />, carbon_manage, raphael_dry];\n    }\n    if (index % 4 === 3) {\n      return [<GreenEffect />, <BlackEffect />, checked, logistics];\n    }\n  };\n  const [effect1, effect2, icon1, icon2] = getBackgroundEffectComponent(\n    index,\n    totalProcessesCount\n  );\n\n  const isLastPath = totalProcessesCount - 2 === index;\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n      {isOrignalOrientation && (\n        <LeftToRightAlignment\n          heading={heading}\n          imageUrl={imageUrl}\n          content={content}\n          isLast={isLast}\n          effect1={effect1}\n          effect2={effect2}\n          isLastPath={isLastPath}\n          icon1={icon1}\n          icon2={icon2}\n          processId={processId}\n        />\n      )}\n      {!isOrignalOrientation && (\n        <RightToLeftAlignment\n          heading={heading}\n          imageUrl={imageUrl}\n          content={content}\n          isLast={isLast}\n          effect1={effect1}\n          effect2={effect2}\n          isLastPath={isLastPath}\n          icon1={icon1}\n          icon2={icon2}\n          processId={processId}\n        />\n      )}\n    </div>\n  );\n}\n\nconst LeftToRightAlignment = ({\n  heading,\n  imageUrl,\n  content,\n  isLast,\n  effect1,\n  effect2,\n  isLastPath,\n  icon1,\n  icon2,\n  processId,\n}) => {\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <ContentComponent\n          heading={heading}\n          content={content}\n          leftText={true}\n          processId={processId}\n        />\n        <ProcessImageComponent imageUrl={imageUrl} />\n      </div>\n      {!isLast && (\n        <LeftToRightPath\n          effect1={effect1}\n          effect2={effect2}\n          isLastPath={isLastPath}\n          icon1={icon1}\n          icon2={icon2}\n        />\n      )}\n    </div>\n  );\n};\n\nconst RightToLeftAlignment = ({\n  heading,\n  imageUrl,\n  content,\n  isLast,\n  effect1,\n  effect2,\n  isLastPath,\n  icon1,\n  icon2,\n  processId,\n}) => {\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <ProcessImageComponent imageUrl={imageUrl} />\n        <ContentComponent\n          heading={heading}\n          content={content}\n          leftText={false}\n          processId={processId}\n        />\n      </div>\n      {!isLast && (\n        <RightToLeft\n          effect1={effect1}\n          effect2={effect2}\n          isLastPath={isLastPath}\n          icon1={icon1}\n          icon2={icon2}\n        />\n      )}\n    </div>\n  );\n};\n\nconst ContentComponent = ({ heading, content, leftText, processId }) => {\n  const TEXT_ALIGN = leftText ? \"left\" : \"right\";\n  const [open, setOpen] = useState(false);\n\n  const onCloseSeeMore = (value) => {\n    setOpen(false);\n  };\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div style={{ flex: 2 }}>\n        <Text\n          text={heading}\n          customClassName={\"process-header-text\"}\n          customStyle={{ textAlign: TEXT_ALIGN }}\n        />\n        <Text\n          text={content}\n          customStyle={{ textAlign: TEXT_ALIGN, marginTop: 8, marginBottom: 8 }}\n          customClassName=\"loto-normal-grey\"\n        />\n      </div>\n      <div style={{ position: \"relative\" }}>\n        <div onClick={() => setOpen(true)}>\n          <Text\n            text=\"see more\"\n            customClassName=\"lato-bolder-red\"\n            customStyle={{\n              textAlign: TEXT_ALIGN,\n              color: \"red\",\n            }}\n          />\n        </div>\n\n        {open ? (\n          <div\n            style={{\n              width: 300,\n              backgroundColor: \"white\",\n              position: \"absolute\",\n              top: 0,\n              maxHeight: 60,\n              borderRadius: 10,\n              padding: 10,\n              zIndex: 10,\n              right: leftText ? -170 : -5,\n            }}\n          >\n            <Description processId={processId} closeSeeMore={onCloseSeeMore} />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nconst Description = ({ processId, closeSeeMore }) => {\n  const { data = {}, loading, error } = useQuery(GET_DETAILED_CONTENT);\n  const content = data?.content || \"\";\n\n  console.log(data);\n  return (\n    <div onClick={() => closeSeeMore(false)}>\n      <Text text={content.description} customClassName=\"tooltip-text-style\" />\n      <div style={{ position: \"absolute\", top: 6, right: 10 }}>\n        <Text text=\"X\" customClassName=\"close-text-style\" />\n      </div>\n    </div>\n  );\n};\n\nconst ProcessImageComponent = ({ imageUrl }) => {\n  return (\n    <div style={{ flex: 1 }}>\n      <img src={imageUrl} style={{ height: 200, width: 192 }} alt=\"process\" />\n    </div>\n  );\n};\n","/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/SVG/RightToLeft.js",["121"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/SVG/LeftToRightPath.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/RedEffect.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/ProductDetail/ProductDetail.js",["122","123","124","125"],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/Tooltip/ToolTip.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/BlueEffect.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/schema.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/components/BackgroundEffect/BlackEffect.js",[],"/Users/saksham/Documents/Trackagrow/Setup/trackgro/src/apollo/queries.ts",["126"],{"ruleId":"127","severity":1,"message":"128","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":17},{"ruleId":"127","severity":1,"message":"131","line":8,"column":11,"nodeType":"129","messageId":"130","endLine":8,"endColumn":18},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"132","replacedBy":"136"},{"ruleId":"134","replacedBy":"137"},{"ruleId":"132","replacedBy":"138"},{"ruleId":"134","replacedBy":"139"},{"ruleId":"127","severity":1,"message":"140","line":80,"column":29,"nodeType":"129","messageId":"130","endLine":80,"endColumn":33},{"ruleId":"127","severity":1,"message":"141","line":80,"column":44,"nodeType":"129","messageId":"130","endLine":80,"endColumn":49},{"ruleId":"142","severity":1,"message":"143","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":11},{"ruleId":"132","replacedBy":"138"},{"ruleId":"134","replacedBy":"139"},{"ruleId":"127","severity":1,"message":"144","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":12},{"ruleId":"127","severity":1,"message":"145","line":10,"column":5,"nodeType":"129","messageId":"130","endLine":10,"endColumn":12},{"ruleId":"127","severity":1,"message":"141","line":11,"column":5,"nodeType":"129","messageId":"130","endLine":11,"endColumn":10},{"ruleId":"127","severity":1,"message":"146","line":23,"column":32,"nodeType":"129","messageId":"130","endLine":23,"endColumn":43},{"ruleId":"127","severity":1,"message":"145","line":235,"column":22,"nodeType":"129","messageId":"130","endLine":235,"endColumn":29},{"ruleId":"127","severity":1,"message":"141","line":235,"column":31,"nodeType":"129","messageId":"130","endLine":235,"endColumn":36},{"ruleId":"127","severity":1,"message":"147","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":13},{"ruleId":"127","severity":1,"message":"145","line":13,"column":5,"nodeType":"129","messageId":"130","endLine":13,"endColumn":12},{"ruleId":"127","severity":1,"message":"141","line":14,"column":5,"nodeType":"129","messageId":"130","endLine":14,"endColumn":10},{"ruleId":"127","severity":1,"message":"148","line":20,"column":5,"nodeType":"129","messageId":"130","endLine":20,"endColumn":7},{"ruleId":"127","severity":1,"message":"149","line":22,"column":5,"nodeType":"129","messageId":"130","endLine":22,"endColumn":9},{"ruleId":"142","severity":1,"message":"150","line":49,"column":7,"nodeType":"129","messageId":"130","endLine":49,"endColumn":23},"no-unused-vars","'ACTIONS' is defined but never used.","Identifier","unusedVar","'payload' is assigned a value but never used.","no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],["151"],["152"],"'data' is assigned a value but never used.","'error' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'gql' is defined but never used.","'Text' is defined but never used.","'loading' is assigned a value but never used.","'GET_PROCESS' is defined but never used.","'icon1' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'UserDetailsInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]